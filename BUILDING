Noted!

Copyright Lancaster Logic Response, 2011-2012.

##BUILDING

#Generic instructions:

Lightbox is written in C++, according to the latest standard, C++11. This means you'll need a relatively recent compiler (GCC 4.7 is tested). Its build system is based up qmake, so you'll need an up to date version of Qt.

Lightbox uses the Qt cross-platform toolkit as a GUI and its bundled build tool, 'qmake', to handling building. This makes the build instructions little more than "qmake && make" (though Qt Creator, the IDE is a good choice if you want to do any development). However there are a number of dependencies that must be installed and configured first:

- Qt; tested against 5.1.0beta1. The qmake from this should be in your environment.

- FFTW; tested against 3.3.0.

- Boost; tested against 1.48 & 1.50.


#Debian & derivatives (Ubuntu &c.):

You can use the package manager to grab and install the non-Qt dependencies you'll need with:

sudo apt-get install libboost1.53-dev libboost-system1.53-dev libfftw3-dev

You'll also need to download and compile Qt (5.1beta1 or later) from:

http://download.qt-project.org/development_releases/qt/5.1/5.1.0-beta1/

#Windows (with minGW):

You'll need to download and install all components for a working minGW first. It's found at:

http://builds.qt-project.org/job/mingw32-windows/

The same site contains a prebuilt and compatible GDB also. Put them somewhere sensible, e.g. C:\mingw32.

You'll also need to download and compile Qt (5.1beta1 or later) from:

http://download.qt-project.org/development_releases/qt/5.1/5.1.0-beta1/

Make sure to get the source code - the minGW versions are too old to be useful. You can compile by running 'configure' followed by <path to Mingw>/bin/ming32-make, making sure to specify the platform as "win32-g++-4.6".

NB. Mingw's make (mingw32-make.exe) has a bug making it crash if the environment's PATH variable contains parentheses. Ensure that the PATH contains no such characters; the easiest way is to reset it to precisely what you need (i.e. the path to MinGW's bin and Qt's bin directories) prior to calling make from the command line, e.g.:

set PATH=C:\mingw32\bin;c:\qt-everywhere-opensource-src-5.1.0-beta1\bin

Next you'll need to download and install boost:

http://www.boost.org/users/download/

Unpack and compile it to somewhere sensible ("C:\boost_1_53_0", perhaps). In any case, remember where the directory is. Compilation is easy enough - use the Windows command line (cmd.exe) to execute "bootstrap.bat" in boost's path, then "b2 toolset=gcc" both in boost's path.

Then get FFTW 3 from here:

http://www.fftw.org/install/windows.html

Having unpacked it somewhere sensible, you'll need to configure Noted with the directory into which you unpacked it.

Finally, you need to tell the Lightbox build system where each of the dependencies are by editing Lightbox/Common.pri and altering the paths (as per the instructions there) to match your directories.

In QtCreator, you'll need to specify the MinGW GCC & GDB in the Tools/Options/Build&Run/Toolchains. Since the make command is still broken regarding parens, you'll need to sanitize the PATH variable in the build environment (Projects tab, Build settings, Build environment) freeing it of parens (not a massive problem - just make sure it has the Qt and MinGW bin directories in it and you should be fine).

#Mac OS X

By far the easiest way to building on Mac is to install MacPorts. Once done you can get all required software with:

sudo port install ...

You'll also need to download and compile Qt (5.1beta1 or later) from:

http://download.qt-project.org/development_releases/qt/5.1/5.1.0-beta1/

Since we're using a GNU GCC rather than the Apple variant, it's necessary to create a new mkspec (to avoid qmake putting in an -Xarch parameter). Instructions...

There is unfortunately a conflict between the libiconv used by Apple's libcups and the libiconv used by boost as installed over MacPorts. Workaround...

-- Gavin Wood <gavin@lancasterlogicresponse.com> 
